const { apiCovid19 } = require('./api/callApi');
const formatDate = require('./formatDate');
const covidModel = require('./models/covid19');
const usersModel = require('./models/users');
const { callSendAPI } = require('./message');

module.exports = function covidAutoUpdate() {
    apiCovid19().then(res => {
        covidModel.findOne({ id: process.env.PAGE_ACCESS_TOKEN }, function (err, covid) {
            let { cases } = covid.data.data.vietnam;
            let date = new Date();
            let increase = parseInt(res.data.vietnam.cases) - parseInt(cases);
            if (parseInt(res.data.vietnam.cases) > parseInt(cases)) {
                covidModel.findOneAndUpdate({ id: process.env.PAGE_ACCESS_TOKEN }, { data: res, date }, () => { });
                usersModel.find({}, function (err, users) {
                    let response;
                    for (const user of users) {
                        response = {
                            "text": `‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è S·ªë ca m·∫Øc COVID-19 t·∫°i Vi·ªát Nam c√≥ chi·ªÅu h∆∞·ªõng gia tƒÉng: \n‚ö†Ô∏è Nhi·ªÖm b·ªánh: ${res.data.vietnam.cases} (TƒÉng ${increase} ca)\n‚ò†Ô∏è T·ª≠ vong: ${res.data.vietnam.deaths}\nüçÄ B√¨nh ph·ª•c: ${res.data.vietnam.recovered}\n\n‚è± C·∫≠p nh·∫≠t l√∫c : ${formatDate(date)}\n‚òëÔ∏è D·ªØ li·ªáu ƒë∆∞·ª£c c·∫≠p nh·∫≠t m·ªói 5 ph√∫t.`
                        }
                        callSendAPI(user.sender_psid, response);
                        setTimeout(function () {
                            let top_country = "";
                            for (let index = 0; index < res.data.countries.length; index++) {
                                top_country += `\n‚ö†Ô∏è ${res.data.countries[index].c_name}: (${res.data.countries[index].c_cases} - ${res.data.countries[index].c_deaths})`
                            }
                            response = {
                                "text": `M·ªôt s·ªë qu·ªëc gia kh√°c:\n(T√™n - Ca Nhi·ªÖm - S·ªë Ng∆∞·ªùi Ch·∫øt):${top_country}`
                            }
                            callSendAPI(user.sender_psid, response);
                        }, 1600)
                    }
                })
            }
        })
    })
}